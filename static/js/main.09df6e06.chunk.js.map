{"version":3,"sources":["Wave-10s-1348px.svg","components/Styles.js","components/TodoItems.js","components/TodoInput.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemsList","styled","ul","TodoItem","li","DeleteBtn","button","TodoListContainer","div","AddTaskButton","TodoItems","todo","removeTask","useState","textStyle","setTextStyle","style","textDecorationLine","type","checked","complete","marginRight","onChange","task","onClick","id","Form","addTask","userInput","setUserInput","handleSubmit","e","preventDefault","onSubmit","className","placeholder","currentTarget","value","onKeyDown","key","TodoList","todos","setTodos","filter","newTodo","uuid","map","Background","background","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAe,MAA0B,4C,8BCGnCA,EAAgBC,IAAOC,GAAV,8FAKbC,EAAWF,IAAOG,GAAV,wMASRC,EAAYJ,IAAOK,OAAV,0OAaTC,EAAoBN,IAAOO,IAAV,8QAYjBC,EAAgBR,IAAOK,OAAV,2R,eCNJI,MA/Bf,YAA2C,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WACxB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAYA,OACA,cAACf,EAAD,UAEM,eAACG,EAAD,CAAwBa,MAAO,CAACC,mBAAoBH,GAApD,UACM,uBACAI,KAAK,WACLC,QAASR,EAAKS,SACdJ,MAAO,CAAEK,YAAa,GACtBC,SAlBZ,WACQX,EAAKS,UAILT,EAAKS,UAAW,EAChBL,EAAc,MAJdJ,EAAKS,UAAW,EAChBL,EAAc,oBAiBTJ,EAAKY,KACN,cAAClB,EAAD,CAAWmB,QAAS,kBAAMZ,EAAWD,EAAKc,KAA1C,SAA+C,cAAC,IAAD,QARtCd,EAAKc,OCkBfC,MAnCf,YAA6B,IAAZC,EAAW,EAAXA,QACb,EAAkCd,mBAAS,IAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KAMA,SAASC,EAAcC,GACnBA,EAAEC,iBACFL,EAAQC,GACRC,EAAa,IASjB,OACI,uBAAMI,SAAUH,EAAhB,UACI,uBACIZ,KAAK,OACLgB,UAAU,UACVC,YAAY,mBACZb,SAtBZ,SAAuBS,GACnBF,EAAaE,EAAEK,cAAcC,QAsBrBC,UAbZ,SAAyBP,GACR,UAAVA,EAAEQ,KACDT,EAAaC,MAeb,cAACtB,EAAD,sB,iBCIG+B,I,EAAAA,EA/Bf,WACI,MAA0B3B,mBAAS,IAAnC,mBAAO4B,EAAP,KAAcC,EAAd,KAaA,SAAS9B,EAAYa,GACjBiB,EAAS,YAAID,EAAME,QAAO,SAAChC,GAAD,OAAUA,EAAKc,KAAOA,OAGpD,OACI,eAAClB,EAAD,WACI,2CACA,cAAC,EAAD,CAAMoB,QAlBd,SAAkBC,GACd,GAAIA,EAAW,CACX,IAAMgB,EAAU,CACZnB,GAAIoB,MACJtB,KAAMK,EACNR,UAAU,GAEdsB,EAAS,GAAD,mBAAKD,GAAL,CAAYG,SAYnBH,EAAMK,KAAI,SAACnC,GACR,OACA,cAAC,EAAD,CAA2BA,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKc,WCzBjCsB,EAAa9C,IAAOO,IAAV,mJACUwC,GAiBXC,MAVf,WACE,OACE,cAACF,EAAD,UAEI,cAAC,EAAD,OCNOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.09df6e06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Wave-10s-1348px.4cc14dac.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst TodoItemsList = styled.ul `\n    list-style-type: none;\n    width: 100%;\n    margin: 0;    \n`\nconst TodoItem = styled.li `\n    width: 90%;\n    background-color: rgba (246, 235, 249, 0.7);\n    border-radius: 10px;\n    position: relative;\n    justify-items: center;\n    line-height: 2rem;\n\n`\nconst DeleteBtn = styled.button `\n    border: none;\n    background-color: #018c96;\n    position: absolute;\n    right: 5px;\n    top: 8px;\n    cursor: pointer;\n    \n    margin-left: 5px;\n    &:hover {\n        color: #eb5401;\n    }\n`\nconst TodoListContainer = styled.div `\n    width: 300px;\n    background-color: #018c96;\n    color: #f6ebf9;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 20px;\n    margin: auto;\n    border-radius: 20px;\n`\nconst AddTaskButton = styled.button`\n    type: input;\n    background-color: rgb(0, 71, 69);\n    color: #f6ebf9;\n    border-radius: 30px;\n    border: none;\n    padding: 8px;\n    margin-left: 5px;\n    &:hover {\n        color: rgb(0, 71, 69);\n        background-color: #f6ebf9;\n    }\n`\n\nexport { TodoItemsList, TodoItem, DeleteBtn, TodoListContainer, AddTaskButton }","import React from 'react';\nimport { useState } from 'react';\nimport { TodoItemsList, TodoItem, DeleteBtn } from './Styles';\nimport { RiDeleteBin6Line } from 'react-icons/ri'; //npm install react-icons --save\n\nfunction TodoItems ({ todo, removeTask }) {\n    const [textStyle, setTextStyle] = useState('');\n\n    function handleChecked() {\n        if(!todo.complete) {\n            todo.complete = true;\n            setTextStyle ('line-through');\n        } else {\n            todo.complete = false;\n            setTextStyle ('');\n        }\n    }\n\n    return (\n    <TodoItemsList>\n        \n          <TodoItem key={todo.id} style={{textDecorationLine: textStyle}}>\n                <input \n                type=\"checkbox\" \n                checked={todo.complete}\n                style={{ marginRight: 8 }}\n                onChange={handleChecked}\n                 />\n                {todo.task}\n                <DeleteBtn onClick={() => removeTask(todo.id)}><RiDeleteBin6Line /></DeleteBtn>\n            </TodoItem>\n        \n    </TodoItemsList>\n    )\n}\n\nexport default TodoItems;","import React from 'react';\nimport { useState } from 'react';\nimport { AddTaskButton } from './Styles';\n\nfunction Form ({ addTask }) {\n    const [userInput, setUserInput] = useState('');\n\n    function handleChange (e) {\n        setUserInput(e.currentTarget.value)\n    }\n\n    function handleSubmit (e) {\n        e.preventDefault()\n        addTask(userInput)\n        setUserInput(\"\")\n    }\n\n    function handleKeyPress (e) {\n        if(e.key === \"Enter\") {\n            handleSubmit(e)\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\" \n                className=\"newTask\" \n                placeholder=\"I need to do ...\"\n                onChange={handleChange}\n                onKeyDown={handleKeyPress}\n            >\n\n            </input>\n            <AddTaskButton>Add</AddTaskButton>\n        </form>\n    )\n}\n\nexport default Form;","import React from 'react';\nimport { useState } from 'react'\nimport { TodoListContainer } from './Styles';\nimport TodoItems from './TodoItems';\nimport Form from './TodoInput';\nimport uuid from 'react-uuid'; //npm i react-uuid\n\nfunction TodoList () {\n    const [todos, setTodos] = useState([])\n\n    function addTask (userInput) {\n        if (userInput) {\n            const newTodo = {\n                id: uuid(),\n                task: userInput,\n                complete: false\n            }\n            setTodos([...todos, newTodo])\n        }\n    }\n\n    function removeTask (id) {\n        setTodos([...todos.filter((todo) => todo.id !== id)])\n    }\n\n    return (\n        <TodoListContainer>\n            <h1>Todo List</h1>\n            <Form addTask={addTask}/>\n            {todos.map((todo) => {\n                return (\n                <TodoItems key = {todo.id} todo={todo} removeTask={removeTask}/>\n                    )\n            })}\n        </TodoListContainer>\n    )\n}\n\nexport default TodoList;","import React from 'react';\nimport background from './Wave-10s-1348px.svg';\nimport styled from 'styled-components';\nimport './App.css';\nimport TodoList from './components/TodoList'\n\nconst Background = styled.div `\n  background-image: url(${background});\n  width: 100%;\n  background-repeat: no-repeat;\n  height: 100vh;\n  padding-top: 40px;\n`\n\nfunction App() {\n  return (\n    <Background>\n      \n        <TodoList />\n      \n    </Background>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}